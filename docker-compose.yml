services:
  mysql-db:
    image: docker.io/bitnami/mysql:8.4
    container_name: mysql-db
    env_file: .env
    environment:
      ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    networks:
      - spring-net
    volumes:
      - mysql-data:/bitnami/mysql/data
      - ./mysql-init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/mysql/healthcheck.sh"]
      interval: 15s
      timeout: 5s
      retries: 6

  order-service:
    image: ghcr.io/gkhaavik/commercify_orders:main
    env_file: .env
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=${SPRING_ORDERS_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - STRIPE_TEST_SECRET=${STRIPE_TEST_SECRET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ORDER_SERVICE_URL=${ORDER_SERVICE_URL}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
      - PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - spring-net

  payment-service:
    image: ghcr.io/gkhaavik/commercify_payments:main
    env_file: .env
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=${SPRING_PAYMENTS_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - STRIPE_TEST_SECRET=${STRIPE_TEST_SECRET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ORDER_SERVICE_URL=${ORDER_SERVICE_URL}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
      - PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - spring-net

  product-service:
    image: ghcr.io/gkhaavik/commercify_products:main
    env_file: .env
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=${SPRING_PRODUCTS_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - STRIPE_TEST_SECRET=${STRIPE_TEST_SECRET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ORDER_SERVICE_URL=${ORDER_SERVICE_URL}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
      - PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - spring-net

  user-service:
    image: ghcr.io/gkhaavik/commercify_users:main
    env_file: .env
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=${SPRING_USERS_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - STRIPE_TEST_SECRET=${STRIPE_TEST_SECRET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ORDER_SERVICE_URL=${ORDER_SERVICE_URL}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
      - PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - spring-net

networks:
  spring-net:
    driver: bridge

volumes:
  mysql-data:
    driver: local
